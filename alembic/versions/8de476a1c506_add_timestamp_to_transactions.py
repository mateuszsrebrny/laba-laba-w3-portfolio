"""add timestamp to transactions

Revision ID: 8de476a1c506
Revises: 36be4081fbcf
Create Date: 2025-03-26 09:58:17.979388

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from datetime import datetime, timedelta

# revision identifiers, used by Alembic.
revision: str = '8de476a1c506'
down_revision: Union[str, None] = '36be4081fbcf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # 1. Add column as nullable first
    op.add_column('transactions', sa.Column('timestamp', sa.DateTime(), nullable=True))

    # 2. Backfill each row with unique-ish timestamps
    conn = op.get_bind()
    base_time = datetime.utcnow()
    results = conn.execute(sa.text("SELECT id FROM transactions ORDER BY id")).fetchall()

    for i, row in enumerate(results):
        ts = base_time + timedelta(seconds=i)
        conn.execute(
            sa.text("UPDATE transactions SET timestamp = :ts WHERE id = :id"),
            {"ts": ts, "id": row.id}
        )

    # 3. Alter column to make it NOT NULL
    op.alter_column(
        'transactions',
        'timestamp',
        existing_type=sa.DateTime(),
        nullable=False
    )
def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('transactions', 'timestamp')
    # ### end Alembic commands ###
